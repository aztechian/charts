name: Helm Chart linting

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
    tags:
      - v*

# This ensures that previous jobs for the PR are canceled when the PR is
# updated.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run helm lint
        run: |
          for c in $(find . -name Chart.yaml); do
            helm lint $(basename ${c%%/Chart.yaml})
          done;
  helm-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Install helm-docs
        run: |
          hd_ver=$(grep '^helm-docs' .tool-versions| cut -f2 -d ' ')
          echo "::debug::helm-docs version = ${hd_ver}"
          cd /tmp
          curl -sL "https://github.com/norwoodj/helm-docs/releases/download/v${hd_ver}/helm-docs_${hd_ver}_Linux_x86_64.tar.gz" | tar xzf - && \
          chmod +x ./helm-docs
          mv ./helm-docs /usr/local/bin/

      - name: Run helm-docs
        run: |
          helm-docs

      - name: Test for changes
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          mods=$(git diff --name-only --cached)
          if [[ -z $mods ]]; then
            exit 0
          else
            for f in ${mods}; do
              echo "::warning file=${f},title=${f}::file would be updated by helm-docs"
            done
            git commit -m 'Updating READMEs from helm-docs'
            git push -u origin HEAD
            echo "::notice::The PR has been updated with a new commit"
          fi
  helm-package-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Find base commit
        id: latest-tag
        run: |
          git fetch --tags 2>/dev/null
          echo "tag=$(if ! git describe --tags --abbrev=0 HEAD~ 2>/dev/null; then
            git rev-list --max-parents=0 --first-parent HEAD
          fi)" >> $GITHUB_OUTPUT
      
      - name: Find Changed Charts
        id: changed-charts
        run: |
          function filter_charts() {
            while read -r chart; do
              if [[ -d $chart && -f $chart/Chart.yaml ]]; then 
                echo "$chart"
              fi
            done
          }

          function filter_updates() {
            while read -r chart; do
              if git diff --quiet ${{ steps.latest-tag.outputs.tag }} -- $chart/Chart.yaml; then
                echo "$chart"
              fi
            done
          }

          modified=$(git diff --find-renames --name-only ${{ steps.latest-tag.outputs.tag }} -- . | cut -d '/' -f1 | sort | uniq | filter_charts)
          echo "::debug::modified = ${modified}"
          echo "::debug::final changed list = $(echo "$modified" | filter_updates)"
          echo "changed=$(echo "$modified" | filter_updates)" >> $GITHUB_OUTPUT
      
      - name: Comment PR with notice of changed chart
        if: steps.changed-charts.outputs.changed != ''
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Hey there,
            We noticed that you have modified the following chart(s):

            ```
            ${{ steps.changed-charts.outputs.changed }}
            ```
            Before merging, you will need to bump the chart version so that it will publish properly. Please update the Chart.yaml of these charts, and push to this PR again.
          comment_tag: releasecheck
          mode: recreate

      - name: fail if modified
        if: steps.changed-charts.outputs.changed != ''
        run: exit 1
